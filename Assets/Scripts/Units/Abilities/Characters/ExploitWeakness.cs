using UnityEngine;
using System;

public class ExploitWeakness : Ability
{
	bool doubleDamage = false;

	public ExploitWeakness (Unit u, TileMap m, PrefabLibrary el) : base(u, m , el)
	{
		Name = "Exploit Weakness";
		damage = 30;
		manaCost = 25;
		area = AreaType.Single;
		targets = TargetType.Enemy;
		range = 9;
		maxCooldown = 1;

		description = "Cooldown: " + maxCooldown.ToString () + " Mana: " + manaCost.ToString () +
			"\nDeals " + damage.ToString () + " damage to the target and deals double damage if the target is stunned or snared.";
	}

	public override void UseAbility (Unit target)
	{
		base.UseAbility (target);
		doubleDamage = false;

		//see if the ability should deal double damage
		if (myTarget.IsStunned () || myTarget.IsSnared ()) {
			doubleDamage = true;
			//show target animation to indicate its a crit
			Vector3 pos = map.TileCoordToWorldCoord (myTarget.tileX, myTarget.tileY);
			myVisualEffects.Add (effectLib.CreateVisualEffect ("Exploit Weakness Target", pos).GetComponent<EffectController> ());
		}

		myTarget = target;
		
		myProjectiles.Add(effectLib.CreateProjectile("Crippling Shot", myCaster.transform.position, target.transform.position, 15).GetComponent<ProjectileController>());
		myCaster.GetComponent<AudioSource> ().PlayOneShot (effectLib.getSoundEffect ("Exploit Weakness Fire"));
	}

	public override void AbilityOnHit ()
	{
		base.AbilityOnHit ();

		int dmg = (int)(damage * myCaster.damageDealtMod);

		if (doubleDamage) {
			myTarget.TakeDamage (dmg * 2, effectLib.getSoundEffect ("Exploit Weakness Crit"), false, myCaster);
		} else {
			myTarget.TakeDamage (dmg, effectLib.getSoundEffect ("Blunt3"), true, myCaster);
		}
		Vector3 pos = map.TileCoordToWorldCoord (myTarget.tileX, myTarget.tileY);
		myVisualEffects.Add (effectLib.CreateVisualEffect ("Exploit Weakness Hit", pos).GetComponent<EffectController> ());

	}
}


